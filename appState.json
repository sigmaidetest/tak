{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "ceab92fa-947e-477c-bec1-bf9a1e4fd3f2": {
        "id": "ceab92fa-947e-477c-bec1-bf9a1e4fd3f2",
        "parent": null,
        "name": "tak",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "452ebb12-ce36-48d6-835a-22b60140a7e7",
          "4535895c-c0b0-4fbe-a81a-ad5f45eeb8d9",
          "0850741c-6b12-44cb-b11d-6079b7593281"
        ],
        "isRemovable": false,
        "filePath": "tak"
      },
      "452ebb12-ce36-48d6-835a-22b60140a7e7": {
        "id": "452ebb12-ce36-48d6-835a-22b60140a7e7",
        "parent": "ceab92fa-947e-477c-bec1-bf9a1e4fd3f2",
        "name": "one",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "tak/one",
        "code": "let AWS = require('aws-sdk');\nlet SL = require('@slappforge/slappforge-sdk');\nconst sqs = new SL.AWS.SQS(AWS);\nconst ddb = new AWS.DynamoDB.DocumentClient();\nexports.handler = function (event, context, callback) {\n\tddb.delete({\n\t\tTableName: 'ddb',\n\t\tKey: { 'dkey': 'key' }\n\t}, function (err, data) {\n\t\tif (err) {\n\t\t\t//handle error\n\t\t} else {\n\t\t\t//your logic goes here\n\t\t}\n\t});\n\n\tsqs.receiveMessage({\n\t\tQueueUrl: 'https://sqs.us-east-1.amazonaws.com/359675929438/sqs',\n\t\tAttributeNames: ['All'],\n\t\tMaxNumberOfMessages: '1',\n\t\tVisibilityTimeout: '30',\n\t\tWaitTimeSeconds: '0'\n\t}, function (receivedMessages) {\n\t\treceivedMessages.forEach(message => {\n\t\t\t// your logic to access each message through out the loop. Each message is available under variable message \n\t\t\t// within this block\n\t\t})\n\t}, function (error) {\n\t\t// implement error handling logic here\n\t});\n\n\tcallback(null, 'Successfully executed');\n}",
        "resources": [
          "s3randomizedblogspotcomimages",
          "s3randomizedblogspotcomimages",
          "ddbddb",
          "snsusEast1nik"
        ],
        "triggers": [
          {
            "resourceName": "s3randomizedblogspotcomimages",
            "config": {
              "type": "s3:ObjectCreated:*",
              "keyPrefix": "",
              "keySuffix": ".txt"
            }
          },
          {
            "resourceName": "s3randomizedblogspotcomimages",
            "config": {
              "type": "s3:ObjectRemoved:*",
              "keyPrefix": "file",
              "keySuffix": ""
            }
          },
          {
            "resourceName": "snsusEast1nik",
            "config": {}
          }
        ],
        "version": 1
      },
      "4535895c-c0b0-4fbe-a81a-ad5f45eeb8d9": {
        "id": "4535895c-c0b0-4fbe-a81a-ad5f45eeb8d9",
        "parent": "ceab92fa-947e-477c-bec1-bf9a1e4fd3f2",
        "name": "two.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "tak/two.js",
        "code": "let AWS = require('aws-sdk');\nconst sns = new AWS.SNS();\nconst s3 = new AWS.S3();\nexports.handler = function (event, context, callback) {\n\ts3.listObjects({\n\t\t'Bucket': 'randomized_blogspot_com_images',\n\t\t'MaxKeys': 10,\n\t\t'Prefix': ''\n\t}).promise()\n\t\t.then(data => {\n\t\t\tconsole.log(data);           // successful response\n\t\t\t/*\n\t\t\tdata = {\n\t\t\t Contents: [\n\t\t\t\t{\n\t\t\t\t   ETag: \"\\\\\"70ee1738b6b21e2c8a43f3a5ab0eee71\\\\\"\",\n\t\t\t\t   Key: \"example1.jpg\",\n\t\t\t\t   LastModified: <Date Representation>,\n\t\t\t\t   Owner: {\n\t\t\t\t\t  DisplayName: \"myname\",\n\t\t\t\t\t  ID: \"12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\"\n\t\t\t\t   },\n\t\t\t\t   Size: 11,\n\t\t\t\t   StorageClass: \"STANDARD\"\n\t\t\t\t},\n\t\t\t\t{...}\n\t\t\t*/\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log(err, err.stack); // an error occurred\n\t\t});\n\n\tsns.publish({\n\t\tMessage: 'tok',\n\t\tMessageAttributes: {},\n\t\tMessageStructure: 'String',\n\t\tTopicArn: 'arn:aws:sns:us-east-1:359675929438:nik'\n\t}).promise()\n\t\t.then(data => {\n\t\t\t// your code goes here\n\t\t})\n\t\t.catch(err => {\n\t\t\t// error handling goes here\n\t\t});\n\n\tcallback(null, 'Successfully executed');\n}",
        "resources": [
          "s3randomizedblogspotcomimages",
          "snsusEast1nik",
          "kinesiskin"
        ],
        "triggers": [
          {
            "resourceName": "kinesiskin",
            "config": {
              "StartingPosition": "TRIM_HORIZON",
              "BatchSize": 100
            }
          }
        ],
        "version": 1
      },
      "0850741c-6b12-44cb-b11d-6079b7593281": {
        "id": "0850741c-6b12-44cb-b11d-6079b7593281",
        "parent": "ceab92fa-947e-477c-bec1-bf9a1e4fd3f2",
        "name": "three.js",
        "type": "LAMBDA_FILE",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "tak/three.js",
        "code": "let AWS = require('aws-sdk');\nconst sns = new AWS.SNS();\nlet SL = require('@slappforge/slappforge-sdk');\nconst sqs = new SL.AWS.SQS(AWS);\nexports.handler = function (event, context, callback) {\n\tsns.publish({\n\t\tMessage: 'rik',\n\t\tMessageAttributes: {\n\t\t\t'AWS.SNS.SMS.SMSType': {\n\t\t\t\tDataType: 'String',\n\t\t\t\tStringValue: 'Promotional'\n\t\t\t}\n\t\t},\n\t\tPhoneNumber: '+94773117990'\n\t}).promise()\n\t\t.then(data => {\n\t\t\t// your code goes here\n\t\t})\n\t\t.catch(err => {\n\t\t\t// error handling goes here\n\t\t});\n\n\tsqs.receiveMessage({\n\t\tQueueUrl: 'https://sqs.us-east-1.amazonaws.com/359675929438/sqs',\n\t\tAttributeNames: ['All'],\n\t\tMaxNumberOfMessages: '1',\n\t\tVisibilityTimeout: '30',\n\t\tWaitTimeSeconds: '0'\n\t}, function (receivedMessages) {\n\t\treceivedMessages.forEach(message => {\n\t\t\t// your logic to access each message through out the loop. Each message is available under variable message \n\t\t\t// within this block\n\t\t})\n\t}, function (error) {\n\t\t// implement error handling logic here\n\t});\n\n\tcallback(null, 'Successfully executed');\n}",
        "resources": [
          "cwenik",
          "apigusEast1apiresourceany",
          "sqsusEast1sqs",
          "snsSms4773117990",
          "snsDirectSMSResource"
        ],
        "triggers": [
          {
            "resourceName": "cwenik",
            "config": {
              "mode": 0,
              "name": "nik",
              "description": "",
              "scheduleExpression": "rate(3 minutes)"
            }
          },
          {
            "resourceName": "apigusEast1apiresourceany",
            "config": {
              "selectedRegion": "us-east-1",
              "apiMode": 0,
              "apiName": "api",
              "endpointType": "EDGE",
              "resourceMode": 0,
              "resourceName": "resource",
              "resourcePath": "/resource",
              "restMethod": "ANY",
              "proxyIntegration": false,
              "stageMode": 0,
              "stageName": "stage"
            }
          }
        ],
        "version": 3
      }
    },
    "rootNode": "ceab92fa-947e-477c-bec1-bf9a1e4fd3f2",
    "openFiles": [
      "452ebb12-ce36-48d6-835a-22b60140a7e7",
      "0850741c-6b12-44cb-b11d-6079b7593281",
      "4535895c-c0b0-4fbe-a81a-ad5f45eeb8d9"
    ],
    "currentFileId": "452ebb12-ce36-48d6-835a-22b60140a7e7",
    "resources": {
      "s3randomizedblogspotcomimages": {
        "name": "s3randomizedblogspotcomimages",
        "type": "S3",
        "config": {
          "mode": 1,
          "bucket": {
            "region": "us-east-1",
            "name": "randomized_blogspot_com_images"
          }
        },
        "usage": {
          "452ebb12-ce36-48d6-835a-22b60140a7e7": {
            "operations": {},
            "occurrence": 2,
            "triggers": [
              {
                "type": "s3:ObjectCreated:*",
                "keyPrefix": "",
                "keySuffix": ".txt"
              },
              {
                "type": "s3:ObjectRemoved:*",
                "keyPrefix": "file",
                "keySuffix": ""
              }
            ]
          },
          "4535895c-c0b0-4fbe-a81a-ad5f45eeb8d9": {
            "operations": {
              "listObjects": [
                {
                  "Bucket": "randomized_blogspot_com_images",
                  "MaxKeys": 10,
                  "Prefix": ""
                }
              ]
            },
            "occurrence": 1,
            "triggers": []
          }
        }
      },
      "snsusEast1nik": {
        "name": "snsusEast1nik",
        "type": "SNS",
        "config": {
          "topicMode": 0,
          "topicName": "nik",
          "topicArn": "arn:aws:sns:us-east-1:359675929438:nik",
          "topicRegion": "us-east-1",
          "snsType": 0,
          "topicDisplayName": "nik",
          "subscriptions": []
        },
        "globallyEditable": true,
        "usage": {
          "452ebb12-ce36-48d6-835a-22b60140a7e7": {
            "operations": {},
            "occurrence": 1,
            "triggers": [
              {}
            ]
          },
          "4535895c-c0b0-4fbe-a81a-ad5f45eeb8d9": {
            "operations": {
              "publish": [
                {
                  "Message": "tok",
                  "MessageAttributes": {},
                  "MessageStructure": "String",
                  "TopicArn": "arn:aws:sns:us-east-1:359675929438:nik"
                }
              ]
            },
            "occurrence": 1,
            "triggers": []
          }
        }
      },
      "cwenik": {
        "name": "cwenik",
        "type": "CLOUD_WATCH",
        "config": {
          "mode": 0,
          "name": "nik",
          "description": "",
          "scheduleExpression": "rate(3 minutes)"
        },
        "usage": {
          "0850741c-6b12-44cb-b11d-6079b7593281": {
            "operations": {},
            "occurrence": 1,
            "triggers": [
              {
                "mode": 0,
                "name": "nik",
                "description": "",
                "scheduleExpression": "rate(3 minutes)"
              }
            ]
          }
        }
      },
      "apigusEast1apiresourceany": {
        "name": "apigusEast1apiresourceany",
        "type": "API_GATEWAY",
        "config": {
          "selectedRegion": "us-east-1",
          "apiMode": 0,
          "apiName": "api",
          "endpointType": "EDGE",
          "resourceMode": 0,
          "resourceName": "resource",
          "resourcePath": "/resource",
          "restMethod": "ANY",
          "proxyIntegration": false,
          "stageMode": 0,
          "stageName": "stage"
        },
        "usage": {
          "0850741c-6b12-44cb-b11d-6079b7593281": {
            "operations": {},
            "occurrence": 1,
            "triggers": [
              {
                "selectedRegion": "us-east-1",
                "apiMode": 0,
                "apiName": "api",
                "endpointType": "EDGE",
                "resourceMode": 0,
                "resourceName": "resource",
                "resourcePath": "/resource",
                "restMethod": "ANY",
                "proxyIntegration": false,
                "stageMode": 0,
                "stageName": "stage"
              }
            ]
          }
        }
      },
      "sqsusEast1sqs": {
        "name": "sqsusEast1sqs",
        "type": "SQS",
        "config": {
          "mode": 0,
          "existing": false,
          "name": "sqs",
          "url": "https://sqs.us-east-1.amazonaws.com/359675929438/sqs",
          "selectedRegion": "us-east-1",
          "deliveryDelay": 0,
          "deliveryDelayUnit": "seconds",
          "useRedrivePolicy": false,
          "useSSE": false,
          "kmsCustomerMasterKey": "default",
          "accountId": "359675929438",
          "dataKeyReusePeriod": 5,
          "queueType": "standardQueue",
          "defaultVisibilityTimeout": 30,
          "defaultVisibilityTimeoutUnit": "seconds",
          "messageRetentionPeriod": 4,
          "messageRetentionPeriodUnit": "days",
          "maximumMessageSize": 256,
          "receiveMessageWaitTime": 0,
          "deadLetterQueueName": "",
          "contentBasedDeduplication": false,
          "operation": 0
        },
        "usage": {
          "452ebb12-ce36-48d6-835a-22b60140a7e7": {
            "operations": {
              "receiveMessage": [
                {
                  "QueueUrl": "https://sqs.us-east-1.amazonaws.com/359675929438/sqs",
                  "AttributeNames": [
                    "All"
                  ],
                  "MaxNumberOfMessages": "1",
                  "VisibilityTimeout": "30",
                  "WaitTimeSeconds": "0"
                }
              ]
            },
            "occurrence": 1,
            "triggers": []
          },
          "0850741c-6b12-44cb-b11d-6079b7593281": {
            "operations": {
              "receiveMessage": [
                {
                  "QueueUrl": "https://sqs.us-east-1.amazonaws.com/359675929438/sqs",
                  "AttributeNames": [
                    "All"
                  ],
                  "MaxNumberOfMessages": "1",
                  "VisibilityTimeout": "30",
                  "WaitTimeSeconds": "0"
                }
              ]
            },
            "occurrence": 1,
            "triggers": []
          }
        },
        "existing": false
      },
      "ddbddb": {
        "name": "ddbddb",
        "type": "DynamoDB",
        "config": {
          "mode": 0,
          "operation": "delete",
          "table": {
            "arn": "",
            "name": "ddb",
            "partitionKey": "dkey",
            "partitionKeyType": "S",
            "hasSortKey": false,
            "sortKey": "",
            "sortKeyType": "S",
            "mode": 0
          },
          "isGlobalEditMode": false,
          "parameters": {
            "Key": {
              "dkey": "key"
            },
            "Item": {},
            "ExpressionAttributeValues": {}
          }
        },
        "usage": {
          "452ebb12-ce36-48d6-835a-22b60140a7e7": {
            "operations": {
              "delete": [
                {
                  "TableName": "ddb",
                  "Key": {
                    "dkey": "key"
                  }
                }
              ]
            },
            "occurrence": 1,
            "triggers": []
          }
        }
      },
      "kinesiskin": {
        "name": "kinesiskin",
        "type": "Kinesis",
        "config": {
          "mode": 0,
          "StreamName": "kin",
          "shards": 1,
          "region": "us-east-1",
          "triggerParams": {
            "StartingPosition": "TRIM_HORIZON",
            "BatchSize": 100
          }
        },
        "globallyEditable": true,
        "usage": {
          "4535895c-c0b0-4fbe-a81a-ad5f45eeb8d9": {
            "operations": {},
            "occurrence": 1,
            "triggers": [
              {
                "StartingPosition": "TRIM_HORIZON",
                "BatchSize": 100
              }
            ]
          }
        }
      },
      "snsDirectSMSResource": {
        "name": "snsDirectSMSResource",
        "type": "SNS",
        "config": {
          "snsType": 1,
          "numbers": [
            "+94773117990"
          ]
        },
        "globallyEditable": false,
        "usage": {
          "0850741c-6b12-44cb-b11d-6079b7593281": {
            "operations": {
              "publish": [
                {
                  "Message": "rik",
                  "MessageAttributes": {
                    "AWS.SNS.SMS.SMSType": {
                      "DataType": "String",
                      "StringValue": "Promotional"
                    }
                  },
                  "PhoneNumber": "+94773117990"
                }
              ]
            },
            "occurrence": 1,
            "triggers": []
          }
        }
      }
    },
    "packageJSON": {
      "dependencies": {
        "aws-sdk": {
          "name": "aws-sdk",
          "version": "2.176.0",
          "notRemovable": true
        },
        "slappforge-sdk": {
          "name": "@slappforge/slappforge-sdk",
          "version": "0.0.3",
          "notRemovable": true
        },
        "SL": "1.0.0"
      }
    },
    "changeExistingProject": true,
    "additionalFiles": [],
    "lambdaId": "452ebb12-ce36-48d6-835a-22b60140a7e7"
  },
  "PROJECT_META": {
    "projectName": "tak",
    "projectDescription": "tik",
    "projectVersion": "tuk",
    "repoName": "tak",
    "repoUrl": "https://github.com/sigmaidetest/tak",
    "lastSave": 1517497080279,
    "projectRegion": "us-east-1"
  }
}